/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ APK —Ñ–∞–π–ª–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ "Maximum call stack size exceeded"
 */
async function uploadAPK() {
    const newVersion = document.getElementById('new-version').value;
    const changelog = document.getElementById('changelog').value;
    const updateRequired = document.getElementById('update-required').checked;
    const apkFile = document.getElementById('apk-file').files[0];
    
    if (!newVersion) {
        alert('‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä—Å–∏—é APK');
        return;
    }
    
    if (!apkFile) {
        alert('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ APK —Ñ–∞–π–ª');
        return;
    }
    
    log(`üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ APK v${newVersion} —á–µ—Ä–µ–∑ GitHub API (${(apkFile.size / 1024 / 1024).toFixed(1)} MB)...`);
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        if (!authToken) {
            throw new Error('–¢–æ–∫–µ–Ω GitHub –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.');
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º APK –Ω–∞–ø—Ä—è–º—É—é –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        log('üì§ –ó–∞–≥—Ä—É–∑–∫–∞ APK —Ñ–∞–π–ª–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π...');
        
        // –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        const apkFileName = `app-v${newVersion}.apk`;
        const apkPath = `files/updates/${apkFileName}`;
        
        // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ binary –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64 —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FileReader
        // –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–∫–∏ Maximum call stack size exceeded
        const base64Content = await new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.onload = () => {
                // –ü–æ–ª—É—á–∞–µ–º base64 —Å—Ç—Ä–æ–∫—É, —É–¥–∞–ª—è—è –ø—Ä–µ—Ñ–∏–∫—Å data:application/...
                const base64 = reader.result.split(',')[1];
                resolve(base64);
            };
            reader.onerror = reject;
            reader.readAsDataURL(apkFile);
        });
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º APK —Ñ–∞–π–ª
        log('üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ APK —Ñ–∞–π–ª–∞...');
        const uploadResponse = await fetch(`https://api.github.com/repos/artemon4es/tv-channels-api/contents/${apkPath}`, {
            method: 'PUT',
            headers: {
                'Authorization': `Bearer ${authToken}`,
                'X-GitHub-Api-Version': '2022-11-28',
                'Accept': 'application/vnd.github.v3+json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                message: `üì± Add APK v${newVersion}`,
                content: base64Content,
                branch: 'main'
            })
        });
        
        if (!uploadResponse.ok) {
            const errorData = await uploadResponse.json();
            throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: ${errorData.message}`);
        }
        
        log('‚úÖ APK —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º config.json
        log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        const configResponse = await fetch(`https://api.github.com/repos/artemon4es/tv-channels-api/contents/api/config.json`, {
            headers: {
                'Authorization': `Bearer ${authToken}`,
                'X-GitHub-Api-Version': '2022-11-28',
                'Accept': 'application/vnd.github.v3+json'
            }
        });
        
        if (!configResponse.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${configResponse.status}`);
        }
        
        const configData = await configResponse.json();
        const config = JSON.parse(atob(configData.content));
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º version_code –∏–∑ –≤–µ—Ä—Å–∏–∏
        const versionCode = parseInt(newVersion.replace(/\./g, '')) || 1;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config.app_info.latest_version = newVersion;
        config.app_info.version_code = versionCode;
        config.app_info.download_url = `https://artemon4es.github.io/tv-channels-api/files/updates/${apkFileName}`;
        config.app_info.update_required = updateRequired;
        config.app_info.changelog = changelog;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ base64 –¥–ª—è Unicode —Å—Ç—Ä–æ–∫
        function safeBase64Encode(str) {
            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ UTF-8 –º–∞—Å—Å–∏–≤ –±–∞–π—Ç–æ–≤
            const utf8Bytes = new TextEncoder().encode(str);
            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∞—Å—Å–∏–≤ –±–∞–π—Ç–æ–≤ –≤ —Å—Ç—Ä–æ–∫—É base64
            return btoa(String.fromCharCode.apply(null, utf8Bytes));
        }
        
        const configJson = JSON.stringify(config, null, 2);
        const base64Config = safeBase64Encode(configJson);
        
        log('üìù –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
        
        const updateConfigResponse = await fetch(`https://api.github.com/repos/artemon4es/tv-channels-api/contents/api/config.json`, {
            method: 'PUT',
            headers: {
                'Authorization': `Bearer ${authToken}`,
                'X-GitHub-Api-Version': '2022-11-28',
                'Accept': 'application/vnd.github.v3+json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                message: `üì± Update config for APK v${newVersion}`,
                content: base64Config,
                sha: configData.sha,
                branch: 'main'
            })
        });
        
        if (!updateConfigResponse.ok) {
            const errorData = await updateConfigResponse.json().catch(() => ({ message: 'Unknown error' }));
            throw new Error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${errorData.message}`);
        }
        
        log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
        log('üéâ APK v' + newVersion + ' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
        log('üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç');
        
        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        document.getElementById('new-version').value = '';
        document.getElementById('changelog').value = '';
        document.getElementById('update-required').checked = false;
        document.getElementById('apk-file').value = '';
        
    } catch (error) {
        log(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ APK: ${error.message}`);
    }
}