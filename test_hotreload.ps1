# üîÑ –¢–ï–°–¢ HOTRELOAD –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ã—Å—Ç—Ä–æ—Ç—ã –æ—Ç–∫–ª–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞

param(
    [string]$Token = "",
    [int]$MaxWaitTime = 30
)

Write-Host "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HotReload —Å–∏—Å—Ç–µ–º—ã..." -ForegroundColor Cyan
Write-Host "=" * 50

$baseUrl = "https://artemon4es.github.io/tv-channels-api"
$apiUrl = "$baseUrl/api/config.json"
$repoUrl = "https://api.github.com/repos/artemon4es/tv-channels-api"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if ([string]::IsNullOrEmpty($Token)) {
    Write-Host "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω GitHub —Ç–æ–∫–µ–Ω!" -ForegroundColor Red
    Write-Host "üí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\test_hotreload.ps1 -Token 'YOUR_TOKEN'" -ForegroundColor Yellow
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
function Get-ServiceStatus {
    try {
        $response = Invoke-RestMethod -Uri "$apiUrl?t=$(Get-Date -UFormat %s)" -TimeoutSec 10
        return $response.service_config.service_available
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: $($_.Exception.Message)" -ForegroundColor Red
        return $null
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
function Set-ServiceStatus {
    param([bool]$Status, [string]$Message = "")
    
    try {
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π config.json
        $getResponse = Invoke-RestMethod -Uri "$repoUrl/contents/api/config.json" -Headers @{
            "Authorization" = "token $Token"
            "Accept" = "application/vnd.github.v3+json"
        }
        
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        $currentConfig = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($getResponse.content)) | ConvertFrom-Json
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        $currentConfig.service_config.service_available = $Status
        $currentConfig.service_config.message = $Message
        
        # –ö–æ–¥–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        $updatedContent = $currentConfig | ConvertTo-Json -Depth 10
        $encodedContent = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($updatedContent))
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª
        $updateBody = @{
            message = "üîÑ –¢–µ—Å—Ç HotReload: —Å–µ—Ä–≤–∏—Å $(if($Status){'–≤–∫–ª—é—á–µ–Ω'}else{'–æ—Ç–∫–ª—é—á–µ–Ω'})"
            content = $encodedContent
            sha = $getResponse.sha
            branch = "main"
        } | ConvertTo-Json -Depth 10
        
        Invoke-RestMethod -Uri "$repoUrl/contents/api/config.json" -Method Put -Headers @{
            "Authorization" = "token $Token"
            "Accept" = "application/vnd.github.v3+json"
            "Content-Type" = "application/json"
        } -Body $updateBody | Out-Null
        
        return $true
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
function Wait-StatusChange {
    param([bool]$ExpectedStatus, [int]$MaxWait = 30)
    
    Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ $ExpectedStatus..." -ForegroundColor Yellow
    
    $startTime = Get-Date
    $timeout = $startTime.AddSeconds($MaxWait)
    
    while ((Get-Date) -lt $timeout) {
        $currentStatus = Get-ServiceStatus
        
        if ($currentStatus -eq $ExpectedStatus) {
            $elapsed = [math]::Round(((Get-Date) - $startTime).TotalSeconds, 2)
            Write-Host "‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –∑–∞ $elapsed —Å–µ–∫—É–Ω–¥" -ForegroundColor Green
            return $true
        }
        
        Start-Sleep -Seconds 2
        Write-Host "." -NoNewline -ForegroundColor Gray
    }
    
    Write-Host ""
    Write-Host "‚ùå –°—Ç–∞—Ç—É—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –∑–∞ $MaxWait —Å–µ–∫—É–Ω–¥" -ForegroundColor Red
    return $false
}

# –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç
Write-Host "üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞..." -ForegroundColor Cyan
$initialStatus = Get-ServiceStatus

if ($initialStatus -eq $null) {
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞!" -ForegroundColor Red
    exit 1
}

Write-Host "üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞: $(if($initialStatus){'–í–∫–ª—é—á–µ–Ω'}else{'–û—Ç–∫–ª—é—á–µ–Ω'})" -ForegroundColor $(if($initialStatus){'Green'}else{'Red'})
Write-Host ""

# –¢–µ—Å—Ç 1: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
Write-Host "üîÑ –¢–ï–°–¢ 1: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞" -ForegroundColor Cyan
Write-Host "-" * 30

if ($initialStatus) {
    Write-Host "üì§ –û—Ç–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å..." -ForegroundColor Yellow
    
    $success = Set-ServiceStatus -Status $false -Message "–¢–µ—Å—Ç HotReload - —Å–µ—Ä–≤–∏—Å –æ—Ç–∫–ª—é—á–µ–Ω"
    
    if ($success) {
        $result1 = Wait-StatusChange -ExpectedStatus $false -MaxWait $MaxWaitTime
        
        if ($result1) {
            Write-Host "‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω!" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω!" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å" -ForegroundColor Red
    }
} else {
    Write-Host "‚ÑπÔ∏è  –°–µ—Ä–≤–∏—Å —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω" -ForegroundColor Blue
}

Write-Host ""

# –¢–µ—Å—Ç 2: –í–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
Write-Host "üîÑ –¢–ï–°–¢ 2: –í–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞" -ForegroundColor Cyan
Write-Host "-" * 30

Write-Host "üì§ –í–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å..." -ForegroundColor Yellow

$success = Set-ServiceStatus -Status $true -Message ""

if ($success) {
    $result2 = Wait-StatusChange -ExpectedStatus $true -MaxWait $MaxWaitTime
    
    if ($result2) {
        Write-Host "‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω!" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å" -ForegroundColor Red
}

Write-Host ""

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
Write-Host "=" * 50
Write-Host "üéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:" -ForegroundColor Cyan

if ($result1 -and $result2) {
    Write-Host "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! HotReload —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ." -ForegroundColor Green
} elseif ($result1 -or $result2) {
    Write-Host "‚ö†Ô∏è  –ß–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã. –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å HotReload." -ForegroundColor Yellow
} else {
    Write-Host "‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. HotReload –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç." -ForegroundColor Red
}

Write-Host ""
Write-Host "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor Yellow
Write-Host "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: $baseUrl" -ForegroundColor Gray
Write-Host "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ GitHub Pages –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω" -ForegroundColor Gray
Write-Host "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Gray
Write-Host "‚Ä¢ –ï—Å–ª–∏ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 5-10 –º–∏–Ω—É—Ç" -ForegroundColor Gray 